{"version":3,"sources":["helpers/getCountries.js","components/CountryGridItem.js","components/CountryGrid.js","hooks/useFetchCountries.js","components/Navbar.js","components/SearchCountry.js","components/CountryApp.js","index.js"],"names":["getCountries","region","a","url","encodeURI","fetch","resp","json","data","country","map","borders","capital","currencies","flag","languages","name","nativeName","population","domain","topLevelDomain","CountryGridItem","className","src","alt","CountryGrid","useState","loading","state","setState","useEffect","then","countries","console","log","useFetchCountries","key","Navbar","type","SearchCountry","setRegion","inputValue","setInputValue","value","onChange","e","target","placeholder","disabled","selected","CountryApp","defaultRegion","darkMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d973389.chunk.js","sourcesContent":["export const getCountries = async ( region ) => {\n    \n    const url = `https://restcountries.eu/rest/v2/region/${ encodeURI(region) }?fields=name;population;region;capital;flag;nativeName;subRegion;topLevelDomain;currencies;languages;borders`;\n\n    const resp = await fetch(url);\n    \n    const data = await resp.json();\n\n    const country = data.map( country => {\n        return {\n            borders: [...country.borders],\n            capital: country.capital,\n            currencies: [...country.currencies],\n            flag: country.flag,\n            languages: [...country.languages],\n            name: country.name,\n            nativeName: country.nativeName,\n            population: country.population,\n            region: country.region,\n            domain: [...country.topLevelDomain],\n        }\n    });\n\n    return country;\n}","import React from 'react'\n\nexport const CountryGridItem = ({ capital, flag, name, population, region }) => {\n    return (\n        <div className=\"card\">\n            <img src={ flag } alt=\"\"/>\n\n            <div className=\"card-text\">\n                <p className=\"titulo\">{ name }</p>\n                <p><span className=\"subs\">Population:</span> { population }</p>\n                <p><span className=\"subs\">Region:</span> { region }</p>\n                <p><span className=\"subs\">Capital:</span> { capital }</p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchCountries } from '../hooks/useFetchCountries';\nimport { CountryGridItem } from './CountryGridItem';\n\nexport const CountryGrid = ({ region }) => {\n    \n    const { data: countries, loading } = useFetchCountries( region );\n    console.log(loading);\n    return (\n        <>\n            {\n                countries.map((country) => (\n                    <CountryGridItem \n                        key={ country.name }\n                        { ...country }\n                    />\n                ))\n            }\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getCountries } from '../helpers/getCountries';\n\nexport const useFetchCountries = ( region ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n        getCountries( region ).then(\n            countries => {\n                setState({\n                    data: countries,\n                    loading: false,\n                })\n            }\n        );\n    }, [region])\n    console.log('Cambiooooo');\n\n    return state;\n}","import React from 'react'\n\nexport const Navbar = () => {\n    return (\n        <>\n            <header className=\"header\">\n                <div className=\"nav\">\n                    <p className=\"titulo\">Where in the world?</p>\n                    <button type=\"button\"><p className=\"subtitulo\"><ion-icon name=\"moon-outline\"></ion-icon> <span>Dark Mode</span></p></button>\n                </div>\n            </header>   \n        </>\n    )\n}\n","import React, { useState } from 'react'\n\nexport const SearchCountry = ({ setRegion }) => {\n\n    const [ inputValue, setInputValue ] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSelectChange = (e) => {\n        setRegion( e.target.value );\n    }\n\n    return (\n        <form className=\"formulario\">\n            <div className=\"buscador\">\n                <ion-icon name=\"search-outline\"></ion-icon>\n                <input \n                    type=\"text\"\n                    value={ inputValue }\n                    onChange={ handleInputChange }\n                    placeholder = \"Search for a country...\"\n                /> \n            </div>\n            <select className=\"select\" onChange={ handleSelectChange }>\n                <option value=\"0\" disabled selected>Filter by Region</option>\n                <option value=\"Africa\">Africa</option>\n                <option value=\"Americas\">America</option>\n                <option value=\"Asia\">Asia</option>\n                <option value=\"Europe\">Europe</option>\n                <option value=\"Oceania\">Oceania</option>\n            </select>\n        </form>\n    )\n}\n","import React, { useState } from 'react'\nimport { CountryGrid } from './CountryGrid';\nimport { Navbar } from './Navbar'\nimport { SearchCountry } from './SearchCountry';\n\nexport const CountryApp = ({ defaultRegion = 'Americas' }) => {\n    \n    const [region, setRegion] = useState( defaultRegion );\n    const [darkMode, setDarkMode] = useState(false)\n    \n    return (\n        <>\n            <Navbar />\n\n            <div className={`container ${ darkMode } && dark`}>\n                <SearchCountry setRegion = { setRegion } />\n\n                <div className=\"container-grid\">\n                    <CountryGrid region={ region }/>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { CountryApp } from './components/CountryApp';\n\nReactDOM.render(\n  <CountryApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}